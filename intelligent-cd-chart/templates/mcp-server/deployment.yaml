{{- range .Values.mcpServers }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: {{ .name }}
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
spec:
  selector:
    matchLabels:
      app: {{ .name }}
  replicas: {{ .replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
      serviceAccountName: {{ .serviceAccount.name | default "default" }}
      containers:
        - name: mcp-server
          image: "{{ .image.repository }}:{{ .image.tag | default "latest" }}"
          imagePullPolicy: {{ .image.pullPolicy | default "Always" }}
          ports:
            - name: http
              containerPort: {{ .mcpServer.port }}
              protocol: TCP
          {{- if .mcpServer.args }}
          args: {{ toYaml .mcpServer.args | nindent 12 }}
          {{- end }}
          {{- with .env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          # Add command to debug environment variables and start the server
          args: ["exec", "argocd-mcp@latest", "sse"]
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
          # livenessProbe:
          #   httpGet:
          #     path: /mcp
          #     port: http
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          # readinessProbe:
          #   httpGet:
          #     path: /mcp
          #     port: http
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
{{- end }}